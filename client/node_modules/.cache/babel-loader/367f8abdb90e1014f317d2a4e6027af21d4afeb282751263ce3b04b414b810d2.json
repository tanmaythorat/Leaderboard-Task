{"ast":null,"code":"// API service for handling all backend communications\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\n// Generic API request helper\nconst apiRequest = async (url, options = {}) => {\n  const response = await fetch(url, {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers\n    },\n    ...options\n  });\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n  return response.json();\n};\n\n// User API calls\nexport const userService = {\n  // Get all users\n  getUsers: async () => {\n    return await apiRequest(`${API_BASE_URL}/users`);\n  },\n  // Add new user\n  addUser: async name => {\n    return await apiRequest(`${API_BASE_URL}/users`, {\n      method: 'POST',\n      body: JSON.stringify({\n        name\n      })\n    });\n  },\n  // Claim points for user\n  claimPoints: async userId => {\n    return await apiRequest(`${API_BASE_URL}/claim`, {\n      method: 'POST',\n      body: JSON.stringify({\n        userId\n      })\n    });\n  },\n  // Get claim history\n  getClaimHistory: async (userId = null) => {\n    const url = userId ? `${API_BASE_URL}/history/${userId}` : `${API_BASE_URL}/history`;\n    return await apiRequest(url);\n  }\n};\nexport default userService;","map":{"version":3,"names":["BASE_URL","process","env","REACT_APP_API_BASE_URL","apiRequest","url","options","response","fetch","headers","ok","Error","status","json","userService","getUsers","API_BASE_URL","addUser","name","method","body","JSON","stringify","claimPoints","userId","getClaimHistory"],"sources":["D:/Projects/leaderboard-backend-final/client/src/services/api.js"],"sourcesContent":["// API service for handling all backend communications\r\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n\r\n// Generic API request helper\r\nconst apiRequest = async (url, options = {}) => {\r\n  const response = await fetch(url, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      ...options.headers,\r\n    },\r\n    ...options,\r\n  });\r\n  \r\n  if (!response.ok) {\r\n    throw new Error(`HTTP error! status: ${response.status}`);\r\n  }\r\n  \r\n  return response.json();\r\n};\r\n\r\n// User API calls\r\nexport const userService = {\r\n  // Get all users\r\n  getUsers: async () => {\r\n    return await apiRequest(`${API_BASE_URL}/users`);\r\n  },\r\n\r\n  // Add new user\r\n  addUser: async (name) => {\r\n    return await apiRequest(`${API_BASE_URL}/users`, {\r\n      method: 'POST',\r\n      body: JSON.stringify({ name })\r\n    });\r\n  },\r\n\r\n  // Claim points for user\r\n  claimPoints: async (userId) => {\r\n    return await apiRequest(`${API_BASE_URL}/claim`, {\r\n      method: 'POST',\r\n      body: JSON.stringify({ userId })\r\n    });\r\n  },\r\n\r\n  // Get claim history\r\n  getClaimHistory: async (userId = null) => {\r\n    const url = userId \r\n      ? `${API_BASE_URL}/history/${userId}`\r\n      : `${API_BASE_URL}/history`;\r\n    return await apiRequest(url);\r\n  }\r\n};\r\n\r\nexport default userService;"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;;AAEnD;AACA,MAAMC,UAAU,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EAC9C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;IAChCI,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,GAAGH,OAAO,CAACG;IACb,CAAC;IACD,GAAGH;EACL,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACG,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBJ,QAAQ,CAACK,MAAM,EAAE,CAAC;EAC3D;EAEA,OAAOL,QAAQ,CAACM,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAG;EACzB;EACAC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,OAAO,MAAMX,UAAU,CAAC,GAAGY,YAAY,QAAQ,CAAC;EAClD,CAAC;EAED;EACAC,OAAO,EAAE,MAAOC,IAAI,IAAK;IACvB,OAAO,MAAMd,UAAU,CAAC,GAAGY,YAAY,QAAQ,EAAE;MAC/CG,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEJ;MAAK,CAAC;IAC/B,CAAC,CAAC;EACJ,CAAC;EAED;EACAK,WAAW,EAAE,MAAOC,MAAM,IAAK;IAC7B,OAAO,MAAMpB,UAAU,CAAC,GAAGY,YAAY,QAAQ,EAAE;MAC/CG,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEE;MAAO,CAAC;IACjC,CAAC,CAAC;EACJ,CAAC;EAED;EACAC,eAAe,EAAE,MAAAA,CAAOD,MAAM,GAAG,IAAI,KAAK;IACxC,MAAMnB,GAAG,GAAGmB,MAAM,GACd,GAAGR,YAAY,YAAYQ,MAAM,EAAE,GACnC,GAAGR,YAAY,UAAU;IAC7B,OAAO,MAAMZ,UAAU,CAACC,GAAG,CAAC;EAC9B;AACF,CAAC;AAED,eAAeS,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}